namespace CosmicWorks.Data.Raw;

internal static class People
{
    internal static IEnumerable<Person> Get()
    {
        yield return new Person("Bruna", "Alves", "Brazil");
        yield return new Person("Eduarda", "Dias", "Brazil");
        yield return new Person("Francis", "Ribeiro", "Brazil");
        yield return new Person("Elza", "Pereira", "Brazil");
        yield return new Person("Antonio", "Teixeira", "Brazil");
        yield return new Person("Brenda", "Fernandes", "Brazil");
        yield return new Person("Clara", "Barbosa", "Brazil");
        yield return new Person("Humberto", "Nascimento", "Brazil");
        yield return new Person("Cris", "Barros", "Brazil");
        yield return new Person("Cecil", "Lima", "Brazil");
        yield return new Person("Dominique", "Oliveira", "Brazil");
        yield return new Person("Marcelo", "Costa", "Brazil");
        yield return new Person("Gael", "Torres", "Brazil");
        yield return new Person("Donato", "Dias", "Brazil");
        yield return new Person("Julio", "Pinto", "Brazil");
        yield return new Person("Henrique", "Cunha", "Brazil");
        yield return new Person("Matheus", "Silva", "Brazil");
        yield return new Person("Mica", "Pereira", "Brazil");
        yield return new Person("Melissa", "Mello", "Brazil");
        yield return new Person("Leticia", "Cavalcanti", "Brazil");
        yield return new Person("Marcio", "Alvez", "Brazil");
        yield return new Person("Beatriz", "Schmidt", "Brazil");
        yield return new Person("Laura", "Cunha", "Brazil");
        yield return new Person("Henrique", "Castro", "Brazil");
        yield return new Person("Marco", "Correa", "Brazil");
        yield return new Person("Gabrielle", "Goncalves", "Brazil");
        yield return new Person("Maria Eduarda", "Schmidt", "Brazil");
        yield return new Person("Julieta", "Oliveira", "Brazil");
        yield return new Person("Karolina", "Rocha", "Brazil");
        yield return new Person("Kim", "Rocha", "Brazil");
        yield return new Person("Marina", "Azevedo", "Brazil");
        yield return new Person("Lara", "Cardoso", "Brazil");
        yield return new Person("Rene", "Lima", "Brazil");
        yield return new Person("Giovanna", "Costa", "Brazil");
        yield return new Person("Ravi", "Costa", "Brazil");
        yield return new Person("Leila", "Goncalves", "Brazil");
        yield return new Person("Valentina", "Rodrigues", "Brazil");
        yield return new Person("Vitor", "Schmidt", "Brazil");
        yield return new Person("Mila", "Moraes", "Brazil");
        yield return new Person("Ricardo", "Cavalcanti", "Brazil");
        yield return new Person("Manuela", "Torres", "Brazil");
        yield return new Person("Manuela", "Ribeiro", "Brazil");
        yield return new Person("Fabio", "Pena", "Brazil");
        yield return new Person("Valerio", "Pereira", "Brazil");
        yield return new Person("Yasmin", "Correia", "Brazil");
        yield return new Person("Vinicius", "Monte", "Brazil");
        yield return new Person("Yara", "Lima", "Brazil");
        yield return new Person("Nicolau", "Mendes", "Brazil");
        yield return new Person("Davi", "Barros", "Brazil");
        yield return new Person("Alice", "Pena", "Brazil");
        yield return new Person("Bernadette", "Brissette", "Canada");
        yield return new Person("Alexandre", "Chauvin", "Canada");
        yield return new Person("Alain", "Davignon", "Canada");
        yield return new Person("Arianne", "Brunelle", "Canada");
        yield return new Person("Arianne", "Monty", "Canada");
        yield return new Person("Charlie", "Roy", "Canada");
        yield return new Person("Alex", "Gagnon", "Canada");
        yield return new Person("Marie", "Methot", "Canada");
        yield return new Person("Camille", "Cartier", "Canada");
        yield return new Person("Genevieve", "Arcouet", "Canada");
        yield return new Person("David", "Tremblay", "Canada");
        yield return new Person("Alain", "Henry", "Canada");
        yield return new Person("Gilbert", "Coupart", "Canada");
        yield return new Person("Blaise", "Richer", "Canada");
        yield return new Person("Maurice", "Paulet", "Canada");
        yield return new Person("Alix", "Gauthier", "Canada");
        yield return new Person("Coralie", "Monjeau", "Canada");
        yield return new Person("Aline", "Dupuy", "Canada");
        yield return new Person("Liane", "Cormier", "Canada");
        yield return new Person("Maxime", "C\u00F4t\u00E9", "Canada");
        yield return new Person("Thomas", "Bellefeuille", "Canada");
        yield return new Person("Christian", "Lacombe", "Canada");
        yield return new Person("Jerome", "Rivard", "Canada");
        yield return new Person("Danielle", "Brasseur", "Canada");
        yield return new Person("Marcel", "Langelier", "Canada");
        yield return new Person("Maurice", "Boulet", "Canada");
        yield return new Person("Sylvie", "Rocher", "Canada");
        yield return new Person("Gilbert", "Bonsaint", "Canada");
        yield return new Person("Sebastien", "Charron", "Canada");
        yield return new Person("Maureen", "Labrecque", "Canada");
        yield return new Person("Noel", "Belisle", "Canada");
        yield return new Person("Elisabeth", "Arcouet", "Canada");
        yield return new Person("Rene", "Pelletier", "Canada");
        yield return new Person("Fabrice", "Richer", "Canada");
        yield return new Person("Felicienne", "Beaudouin", "Canada");
        yield return new Person("Max", "Morin", "Canada");
        yield return new Person("Bernadette", "Sylvain", "Canada");
        yield return new Person("Philippe", "Chauvin", "Canada");
        yield return new Person("Gilbert", "Lacroix", "Canada");
        yield return new Person("Nicoletta", "Charette", "Canada");
        yield return new Person("Theodore", "Lamy", "Canada");
        yield return new Person("Arthur", "Levesque", "Canada");
        yield return new Person("Sasha", "Ouellet", "Canada");
        yield return new Person("Charline", "Leblanc", "Canada");
        yield return new Person("Dany", "B\u00E9lisle", "Canada");
        yield return new Person("Christian", "Cartier", "Canada");
        yield return new Person("Raymond", "Boulet", "Canada");
        yield return new Person("David", "Beaulieu", "Canada");
        yield return new Person("Sidney", "Bellefeuille", "Canada");
        yield return new Person("Annette", "Flamand", "Canada");
        yield return new Person("Fr\u00E9d\u00E9rique", "Pelletier", "Canada");
        yield return new Person("Elise", "Vadeboncoeur", "Canada");
        yield return new Person("Alain", "Lacoste", "Canada");
        yield return new Person("Marcel", "Paulet", "Canada");
        yield return new Person("Isabelle", "Deniger", "Canada");
        yield return new Person("Heloise", "Cartier", "Canada");
        yield return new Person("Coralie", "Duperre", "Canada");
        yield return new Person("Camille", "Tremblay", "Canada");
        yield return new Person("Jacqueline", "Grondin", "Canada");
        yield return new Person("Thomas", "Margand", "Canada");
        yield return new Person("Claude", "Chasse", "Canada");
        yield return new Person("Christophe", "Beaulieu", "Canada");
        yield return new Person("Bernard", "Cote", "Canada");
        yield return new Person("Josephine", "Hebert", "Canada");
        yield return new Person("Genevieve", "Bousquet", "Canada");
        yield return new Person("Bernadette", "Leblanc", "Canada");
        yield return new Person("Audrey", "Dumoulin", "Canada");
        yield return new Person("Henri", "Marquis", "Canada");
        yield return new Person("Claude", "Aube", "Canada");
        yield return new Person("Marie", "Berthelette", "Canada");
        yield return new Person("Denise", "Lebatelier", "Canada");
        yield return new Person("Gerard", "Belisle", "Canada");
        yield return new Person("Coralie", "Hetu", "Canada");
        yield return new Person("Denise", "Bourgeois", "Canada");
        yield return new Person("Ariane", "Pannetier", "Canada");
        yield return new Person("Genevieve", "Plante", "Canada");
        yield return new Person("Eden", "Bouchard", "Canada");
        yield return new Person("Camille", "Brunelle", "Canada");
        yield return new Person("Andree", "Rocher", "Canada");
        yield return new Person("Jean", "Nadeau", "Canada");
        yield return new Person("Theodore", "Saucier", "Canada");
        yield return new Person("Angel", "Brown", "United Kingdom");
        yield return new Person("Hannah", "Haynes", "United Kingdom");
        yield return new Person("Courtney", "Lynch", "United Kingdom");
        yield return new Person("Grace", "Owens", "United Kingdom");
        yield return new Person("Isaac", "Talbot", "United Kingdom");
        yield return new Person("Hayden", "Lopez", "United Kingdom");
        yield return new Person("Toby", "Miller", "United Kingdom");
        yield return new Person("Riley", "Johnson", "United Kingdom");
        yield return new Person("Liam", "Small", "United Kingdom");
        yield return new Person("Hollie", "Rees", "United Kingdom");
        yield return new Person("Avery", "Smith", "United Kingdom");
        yield return new Person("Peyton", "Davis", "United Kingdom");
        yield return new Person("William", "Kirby", "United Kingdom");
        yield return new Person("Quinn", "Anderson", "United Kingdom");
        yield return new Person("Mia", "Steele", "United Kingdom");
        yield return new Person("Gabriel", "Woods", "United Kingdom");
        yield return new Person("Jennifer", "Wilkins", "United Kingdom");
        yield return new Person("Evan", "Lewis", "United Kingdom");
        yield return new Person("Archie", "Boyle", "United Kingdom");
        yield return new Person("Libby", "Harrison", "United Kingdom");
        yield return new Person("Aidan", "Hunt", "United Kingdom");
        yield return new Person("Sonia", "Rees", "United Kingdom");
        yield return new Person("Abbi", "Atkins", "United Kingdom");
        yield return new Person("Sawyer", "Miller", "United Kingdom");
        yield return new Person("Parker", "Jones", "United Kingdom");
        yield return new Person("Abigail", "Jackson", "United States");
        yield return new Person("Dakota", "Sanchez", "United States");
        yield return new Person("Caleb", "Foster", "United States");
        yield return new Person("Anthony", "Ivanov", "United States");
        yield return new Person("Andre", "Lawson", "United States");
        yield return new Person("Dylan", "Williams", "United States");
        yield return new Person("Eric", "Solomon", "United States");
        yield return new Person("Amber", "Rodriguez", "United States");
        yield return new Person("Lisa", "Taylor", "United States");
        yield return new Person("Eugenia", "Lopez", "United States");
        yield return new Person("Casey", "Jensen", "United States");
        yield return new Person("Gabriel", "Diaz", "United States");
        yield return new Person("Juan", "Morgan", "United States");
        yield return new Person("Elizabeth", "Moore", "United States");
        yield return new Person("Mateo", "Gomez", "United States");
        yield return new Person("Isabel", "Garcia", "United States");
        yield return new Person("Graham", "Barnes", "United States");
        yield return new Person("Mikaela", "Lee", "United States");
        yield return new Person("Serena", "Davis", "United States");
        yield return new Person("Kai", "Carter", "United States");
        yield return new Person("Kendall", "Collins", "United States");
        yield return new Person("Michael", "Peltier", "United States");
        yield return new Person("Devon", "Torres", "United States");
        yield return new Person("Maria", "Sullivan", "United States");
        yield return new Person("Hayden", "Cook", "United States");
        yield return new Person("Preston", "Morales", "United States");
        yield return new Person("Malik", "Barden", "United States");
        yield return new Person("Corey", "Gray", "United States");
        yield return new Person("Ellis", "Turner", "United States");
        yield return new Person("Ana", "Bowman", "United States");
        yield return new Person("Kiana", "Anderson", "United States");
        yield return new Person("Mario", "Rogers", "United States");
        yield return new Person("Riley", "Ramirez", "United States");
        yield return new Person("Madison", "Butler", "United States");
        yield return new Person("Maya", "Robinson", "United States");
        yield return new Person("Omar", "Bennett", "United States");
        yield return new Person("Joseph", "Price", "United States");
        yield return new Person("Kayla", "Lewis", "United States");
        yield return new Person("Parker", "McLean", "United States");
        yield return new Person("Hailey", "Clark", "United States");
        yield return new Person("Tyler", "Stein", "United States");
        yield return new Person("Jessie", "Irwin", "United States");
        yield return new Person("Monica", "Thompson", "United States");
        yield return new Person("Quinn", "Campbell", "United States");
        yield return new Person("Taylor", "Phillips", "United States");
        yield return new Person("Wesley", "Brooks", "United States");
        yield return new Person("Rowan", "Murphy", "United States");
        yield return new Person("Sam", "Cantrell", "United States");
        yield return new Person("Rory", "Nguyen", "United States");
        yield return new Person("Hannah", "Jarvis", "United States");
        yield return new Person("Henry", "Ross", "United States");
        yield return new Person("Jacob", "Hancock", "United States");
        yield return new Person("Sydney", "Mattos", "United States");
        yield return new Person("Jordan", "Mitchell", "United States");
        yield return new Person("Victoria", "Burke", "United States");
        yield return new Person("Vance", "DeLeon", "United States");
        yield return new Person("Reed", "Flores", "United States");
        yield return new Person("Felix", "Henderson", "United States");
        yield return new Person("Avery", "Howard", "United States");
        yield return new Person("Violet", "Martinez", "United States");
        yield return new Person("Quincy", "Watson", "United States");
        yield return new Person("Markus", "Long", "United States");
        yield return new Person("Cora", "Thomas", "United States");
        yield return new Person("Tomas", "Richardson", "United States");
        yield return new Person("Oscar", "Ward", "United States");
        yield return new Person("Cameron", "Baker", "United States");
        yield return new Person("Amari", "Rivera", "United States");
        yield return new Person("Olivia", "Wilson", "United States");
        yield return new Person("William", "Beringer", "United States");
        yield return new Person("Natasha", "Jones", "United States");
        yield return new Person("Nicole", "Wagner", "United States");
        yield return new Person("Robin", "Kline", "United States");
        yield return new Person("Renata", "Hall", "United States");
        yield return new Person("Remy", "Morris", "United States");
        yield return new Person("Morgan", "Connors", "United States");
        yield return new Person("Shawn", "Hughes", "United States");
        yield return new Person("Aaron", "Gonzales", "United States");
        yield return new Person("Ashley", "Schroeder", "United States");
    }
}

internal sealed record Person(
    string First,
    string Last,
    string Region
);